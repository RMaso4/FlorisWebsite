// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// User model for potential client portal in the future
model User {
  id            String    @id @default(uuid())
  email         String    @unique
  name          String
  password      String    // Hashed password
  role          UserRole  @default(CLIENT)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  company       Company?  @relation(fields: [companyId], references: [id])
  companyId     String?
  documents     Document[]
}

enum UserRole {
  ADMIN
  STAFF
  CLIENT
}

// Company information for business clients
model Company {
  id            String    @id @default(uuid())
  name          String
  kvkNumber     String?   @unique
  vatNumber     String?   @unique
  address       String
  postalCode    String
  city          String
  phone         String?
  email         String
  users         User[]
  contacts      Contact[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

// Contact form submissions
model Contact {
  id            String    @id @default(uuid())
  name          String
  email         String
  phone         String?
  subject       String
  message       String    @db.Text
  status        ContactStatus @default(NEW)
  company       Company?  @relation(fields: [companyId], references: [id])
  companyId     String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

enum ContactStatus {
  NEW
  IN_PROGRESS
  COMPLETED
  ARCHIVED
}

// Newsletter subscriptions
model NewsletterSubscription {
  id            String    @id @default(uuid())
  email         String    @unique
  name          String
  type          NewsletterType
  isConfirmed   Boolean   @default(false)
  confirmToken  String?   @unique
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

enum NewsletterType {
  GENERAL
  AGRO
}

// News/blog posts
model Post {
  id            String    @id @default(uuid())
  title         String
  slug          String    @unique
  content       String    @db.LongText
  excerpt       String    @db.Text
  published     Boolean   @default(false)
  publishedAt   DateTime?
  author        String
  categories    CategoryOnPost[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

// Categories for blog posts
model Category {
  id            String    @id @default(uuid())
  name          String    @unique
  slug          String    @unique
  posts         CategoryOnPost[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

// Many-to-many relationship between posts and categories
model CategoryOnPost {
  post          Post      @relation(fields: [postId], references: [id])
  postId        String
  category      Category  @relation(fields: [categoryId], references: [id])
  categoryId    String
  createdAt     DateTime  @default(now())

  @@id([postId, categoryId])
}

// Documents (for potential client portal)
model Document {
  id            String    @id @default(uuid())
  title         String
  filename      String
  fileSize      Int
  mimeType      String
  path          String
  user          User      @relation(fields: [userId], references: [id])
  userId        String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

// NOAB Newsletters
model NoabNewsletter {
  id            String    @id @default(uuid())
  title         String
  filename      String
  publishedAt   DateTime
  fileSize      Int
  mimeType      String
  path          String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}